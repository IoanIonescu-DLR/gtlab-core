########################################################
###########GTlab Pipeline Version 2.0.0 ###########
########################################################
# This is a slight changed version and 
# --> the nightly copy stage is currently missing
# --> contains a guiTests step
# --> executes copyBin.bat in copyForDeploymentWin and
#     copyForDeploymentLinux

# Environment variables to use in the pipeline globally
variables:
  PIPELINEVERSION: "2.0.0-unstable"
  GIT_SUBMODULE_STRATEGY: none
  # overriding the global config for now in this branch
  QT_DIR_LINUX:  "/opt/Qt/5.15.2/gcc_64/"
  QT_DIR_LINUX2: "/opt/Qt/5.15.2/gcc_64/"

# inlcude some templates from this file
include:
  - project: 'gtlab-bugtracking/gitlab-templates'
    file: '/ci-templates/.ci-templates.yml'
   
stages:
  - update
  - build
  - test
  - guiTestStable
  - guiTestUnstable
  - regressionTest
  - copy
  - codequality
  - badges

# Templates
.debugBuildRules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+$/ && $DEVTOOLS == "$DEVTOOLS_Win_Stable" # win stable tag
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+-.*$/  && $DEVTOOLS == "$DEVTOOLS_Win_Unstable" # win unstable tag
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+$/ && $DEVTOOLS == "$DEVTOOLS_Linux_Stable" # linux stable tag
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+-.*$/  && $DEVTOOLS == "$DEVTOOLS_Linux_Unstable" # linux unstable tag

.releaseBuildRules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: $CI_COMMIT_BRANCH == "master" # -master
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+$/ && $DEVTOOLS == "$DEVTOOLS_Win_Stable" # stable tag
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+-.*$/ && $DEVTOOLS == "$DEVTOOLS_Win_Unstable" # unstable tag
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+$/ && $DEVTOOLS == "$DEVTOOLS_Linux_Stable" # linux stable tag
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+-.*$/  && $DEVTOOLS == "$DEVTOOLS_Linux_Unstable" # linux unstable tag

# DevTools Update
devtoolsUpdateWindows:
  extends: .devToolsUpdateWindows
  stage: update
  only:
    - master  

devtoolsUpdateLinux:
  extends: .devToolsUpdateLinux
  stage: update
  only:
    - master  

# Windows build
windowsBuildDebug:
  stage: build
  extends: 
    - .debugBuildRules
  before_script:
    - git submodule sync
    - git submodule update --init    
  script:
    - .\tests\pipeline-scripts\build\build-515.bat 1>buildLog.txt
  tags:
    - Win10
  artifacts:
    paths:
      - lib/$TARGETDIRNAME/*-d.dll
      - lib/$TARGETDIRNAME/*-d.lib
      - build/*-d.pdb
      - build/GTlabGui-d.dll
      - build/GTlabGui-d.lib
      - build/$TARGETNAME.exe
      - build/GTlabConsole.exe
      - build/$UNITTESTSNAME.exe
      - build/$UNITTESTSNAME.pdb
      - include/$TARGETDIRNAME/*.h
      - buildLog.txt
    expire_in: 1 week
    when: always
  variables:
    BUILDMODE: debug
    BUILDUNITTESTS: "true"
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Win_Unstable] 
    
windowsBuildRelease:
  stage: build
  extends: 
    - .releaseBuildRules
  before_script:
    - git submodule sync
    - git submodule update --init    
  script:
    - .\tests\pipeline-scripts\build\build-515.bat
  tags:
    - Win10
  artifacts:
    paths:
      - lib/$TARGETDIRNAME/*.dll
      - lib/$TARGETDIRNAME/*.lib
      - include\$TARGETDIRNAME\*.h
      - build/GTlabGui.dll
      - build/GTlabGui.lib
      - build/$TARGETNAME.exe
      - build/GTlabConsole.exe
    expire_in: 1 week
    when: always
  variables:
    BUILDMODE: release
    BUILDUNITTESTS: "false"
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Win_Unstable] 

# Linux build
linuxBuildDebug:
  stage: build
  extends: 
    - .debugBuildRules
    - .buildLinux 
  tags:
    - Linux
  artifacts:
    paths:
    - linuxBuild.txt
    - lib/$TARGETDIRNAME/*.so*
    - build/$TARGETNAME
    - build/GTlabConsole
    - build/*.so*
    - build/$UNITTESTSNAME
    - build/modules
    when: always
    expire_in: 1 week
  variables:
    BUILDMODE: debug
    BUILDUNITTESTS: "true"
    QMAKE_EXECUTABLE: $QT_DIR_LINUX2/bin/qmake
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Linux_Unstable] 

linuxBuildRelease:
  stage: build 
  extends: 
    - .releaseBuildRules
    - .buildLinux 
  tags:
    - Linux
  artifacts:
    paths:
    - lib/$TARGETDIRNAME/*.so*
    - build/$TARGETNAME
    - build/GTlabConsole
    - build/libGTlabGui.so*
    - include/$TARGETDIRNAME/*.h
    expire_in: 1 week
  variables:
    BUILDMODE: release
    BUILDUNITTESTS: "false"
    QMAKE_EXECUTABLE: $QT_DIR_LINUX2/bin/qmake
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Linux_Unstable]    

# Template for the two GUI-Testing jobs
.guiTestTemplate:
  before_script:
    # sync submodules
    - git submodule sync
    - git submodule update --init
    # add permissions
    - chmod +x ./tests/guitests/run_guitests.sh
  script:
    # xvfb to run a virtual display
    - xvfb-run -a ./tests/guitests/run_guitests.sh
  retry: 2
  artifacts:
    paths:
      - ./gui_tests_web
      - ./gui_tests_junits
      - ./gui_tests_stdout*.txt     
      - ./gui_tests_server_stdout.txt  
      - ./guitests_badge.svg
    reports:
      junit: ./gui_tests_junits/junit*.xml
    name: "guitesting results"
    expire_in: 1 week
    when: always

# GUI Testing
.guiTests:
  stage: guiTestStable
  extends: .guiTestTemplate  
  tags:
    - Linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: $CI_COMMIT_TAG == null
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+$/ # stable tag
  needs: 
      - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
      - job: "testLinux512"
        artifacts: false
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
  variables:
    DEVTOOLS_DIR: $DEVTOOLS_Linux_Stable 

# GUI Testing Unstable
guiTestsUnstable:
  stage: guiTestUnstable
  extends: .guiTestTemplate
  tags:
    - Linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: $CI_COMMIT_TAG == null
  needs:
      - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
      - job: "testLinux512Unstable"
        artifacts: false
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
  variables:
    DEVTOOLS_DIR: $DEVTOOLS_Linux_Unstable      

guiTestsUnstableTag:
  stage: guiTestUnstable
  extends: .guiTestTemplate
  tags:
    - Linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+-.*$/ # unstable tag
  needs:
      - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
      - job: "testLinux512Unstable"
        artifacts: false
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
  variables:
    DEVTOOLS_DIR: $DEVTOOLS_Linux_Unstable

# run tests using the binary built before
.testWin512:
  extends: 
    - .winTestTemplate
    - .debugBuildRules
  needs: ["windowsBuildDebug: [$DEVTOOLS_Win_Stable]"]
  dependencies: ["windowsBuildDebug: [$DEVTOOLS_Win_Stable]"]
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Stable

testWin512Unstable:
  extends: 
    - .winTestTemplate
    - .debugBuildRules
  needs: ["windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"]
  dependencies: ["windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"]
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Unstable
    TESTRUNNER: .\tests\pipeline-scripts\unittests\runUnittestsQt515.bat

.testLinux512:
  extends: 
    - .linuxTestTemplate
    - .debugBuildRules
  needs: ["linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"]
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Stable    

testLinux512Unstable:
  extends: 
    - .linuxTestTemplate
    - .debugBuildRules
  needs: ["linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"]
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Unstable   

valgrind:
  extends: 
    - .debugBuildRules
  needs: ["linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"]
  stage: test
  before_script:
    - chmod +x ./tests/memcheck/runValgrind.sh
  script:
    - xvfb-run -a ./tests/memcheck/runValgrind.sh
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
  tags:
    - Linux
  artifacts:
    paths:
      - valgrind-report.xml
    expire_in: 1 week
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Unstable

# copy templates
.copyTemplate:
  script:
    - .\tests\build\copyHeaders-deployment.bat
    - .\tests\build\copyBin.bat
  tags:
    - Win10

.unstableTagTemplate:
  extends: .copyTemplate
  rules:
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+-.*$/
  variables:
    RELEASESTATUS: unstable

.stableTagTemplate:
  extends: .copyTemplate
  rules:
    - if: $CI_COMMIT_TAG =~ /^[1-9][0-9]*-[0-9]+-[0-9]+$/
  variables:
    RELEASESTATUS: stable
    
# copy files to servers
.copyForDeploymentWin:
  stage: copy
  extends: .stableTagTemplate
  dependencies:
    - "windowsBuildDebug: [$DEVTOOLS_Win_Stable]"
    - "windowsBuildRelease: [$DEVTOOLS_Win_Stable]"
  variables:
    PLATFORMNAME:  windows

copyForDeploymentWinUnstable:
  stage: copy
  extends: .unstableTagTemplate
  dependencies:
    - "windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"
    - "windowsBuildRelease: [$DEVTOOLS_Win_Unstable]"
  variables:
    PLATFORMNAME:  windows

.copyForDeploymentLinux:
  stage: copy
  extends: .stableTagTemplate
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
    - "linuxBuildRelease: [$DEVTOOLS_Linux_Stable]"
  variables:
    PLATFORMNAME:  linux

copyForDeploymentLinuxUnstable:
  stage: copy
  extends: .unstableTagTemplate
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
    - "linuxBuildRelease: [$DEVTOOLS_Linux_Unstable]"
  variables:
    PLATFORMNAME:  linux

# code quality
codingstyle:
  stage: codequality
  extends: .codingStyleTemplate 
  except:
    - tags

cppcheck:
  stage: codequality
  extends: .cppCheckReportTemplateFunc
  variables:
    COMPARE_TO: master
   
pages:
  stage: badges
  extends: .pageTemplate 
  only:
    - master
    - tag

# badges
badges:
  stage: badges
  extends: .badgeTemplate 
  except:
    - tags
  dependencies:
    - "windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
    
