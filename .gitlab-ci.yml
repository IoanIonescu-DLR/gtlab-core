########################################################
###############GTlab Pipeline Version 1.5.0 ############
########################################################
# This is a slight changed version and 
# --> the nightly copy stage is currently missing
# --> contains a guiTests step
# --> executes copyBin.bat in copyForDeploymentWin and
#     copyForDeploymentLinux

# Environment variables to use in the pipeline globally
variables:
  PIPELINEVERSION: "1.5.0"

# inlcude some templates from this file
include:
  - project: 'at-twk/gitlab-templates'
    file: '/ci-templates/.ci-templates.yml'
    
stages:
  - update
  - build
  - test
  - guiTestStable
  - guiTestUnstable
  - regressionTest
  - copy
  - codequality
  - badges

devtoolsUpdateWindows:
  extends: .devToolsUpdateWindows
  stage: update
  only:
    - master  

devtoolsUpdateLinux:
  extends: .devToolsUpdateLinux
  stage: update
  only:
    - master  

# Windows build
windowsBuildDebug:
  stage: build
  script:
    - .\tests\build\build-512.bat 1>buildLog.txt
  tags:
    - Win10
  artifacts:
    paths:
      - lib/$TARGETDIRNAME/*-d.dll
      - lib/$TARGETDIRNAME/*-d.lib
      - build/*-d.pdb
      - build/GTlabGui-d.dll
      - build/GTlabGui-d.lib
      - build/$TARGETNAME.exe
      - build/GTlabConsole.exe
      - build/$UNITTESTSNAME.exe
      - build/$UNITTESTSNAME.pdb
      - include/$TARGETDIRNAME/*.h
      - buildLog.txt
    expire_in: 1 week
    when: always
  variables:
    BUILDMODE: debug
    BUILDUNITTESTS: "true"
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Win_Stable, $DEVTOOLS_Win_Unstable]
    
windowsBuildRelease:
  stage: build
  script:
    - .\tests\build\build-512.bat
  tags:
    - Win10
  only:
    - master
    - tags
  artifacts:
    paths:
      - lib/$TARGETDIRNAME/*.dll
      - lib/$TARGETDIRNAME/*.lib
      - include\$TARGETDIRNAME\*.h
      - build/GTlabGui.dll
      - build/GTlabGui.lib
      - build/$TARGETNAME.exe
      - build/GTlabConsole.exe
    expire_in: 1 week
    when: always
  variables:
    BUILDMODE: release
    BUILDUNITTESTS: "false"
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Win_Stable, $DEVTOOLS_Win_Unstable]  
    

# Linux build
linuxBuildDebug:
  stage: build
  extends: .buildLinux  
  tags:
    - Linux
  artifacts:
    paths:
    - linuxBuild.txt
    - lib/$TARGETDIRNAME/*.so*
    - build/$TARGETNAME
    - build/GTlabConsole
    - build/libGTlabGui-d.so*
    - build/$UNITTESTSNAME
    when: always
    expire_in: 1 week
  variables:
    BUILDMODE: debug
    BUILDUNITTESTS: "true"
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Linux_Stable, $DEVTOOLS_Linux_Unstable] 

linuxBuildRelease:
  stage: build
  extends: .buildLinux  
  tags:
    - Linux
  only:
    - master
    - tags
  artifacts:
    paths:
    - lib/$TARGETDIRNAME/*.so*
    - build/$TARGETNAME
    - build/GTlabConsole
    - build/libGTlabGui.so*
    - include/$TARGETDIRNAME/*.h
    expire_in: 1 week
  variables:
    BUILDMODE: release
    BUILDUNITTESTS: "false"
  parallel:
    matrix: 
      - DEVTOOLS: [$DEVTOOLS_Linux_Stable, $DEVTOOLS_Linux_Unstable]    


# Template for the two GUI-Testing jobs
.guiTestTemplate:
  before_script:
    # add permissions
    - chmod +x ./tests/guitests/run_guitests.sh
  script:
    # xvfb to run a virtual display
    - xvfb-run -a ./tests/guitests/run_guitests.sh
  artifacts:
    paths:
      - ./gui_tests_web
      - ./gui_tests_junits
      - ./gui_tests_stdout*.txt     
      - ./gui_tests_server_stdout.txt  
      - ./gui_tests_server_stdout.txt
      - ./guitests_badge.svg  
    reports:
      junit: ./gui_tests_junits/junit*.xml
    name: "guitesting results"
    expire_in: 1 week
    when: always

# GUI Testing
guiTests:
  stage: guiTestStable
  extends: .guiTestTemplate  
  tags:
    - Linux
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
  variables:
    DEVTOOLS_DIR: $DEVTOOLS_Linux_Stable    

# GUI Testing Unstable
guiTestsUnstable:
  stage: guiTestUnstable
  extends: .guiTestTemplate    
  tags:
    - Linux
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
  variables:
    DEVTOOLS_DIR: $DEVTOOLS_Linux_Unstable   
    
# run tests using the binary built before
testWin512:
  extends: .winTestTemplate
  needs: ["windowsBuildDebug: [$DEVTOOLS_Win_Stable]"]
  dependencies: ["windowsBuildDebug: [$DEVTOOLS_Win_Stable]"]
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Stable

testWin512Unstable:
  extends: .winTestTemplate
  needs: ["windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"]
  dependencies: ["windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"]
  variables:
    DEVTOOLS: $DEVTOOLS_Win_Unstable  

testLinux512:
  extends: .linuxTestTemplate
  needs: ["linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"]
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Stable    

testLinux512Unstable:
  extends: .linuxTestTemplate
  needs: ["linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"]
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Unstable   

valgrind:
  needs: ["linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"]
  stage: test
  before_script:
    - chmod +x ./tests/memcheck/runValgrind.sh
  script:
    - xvfb-run -a ./tests/memcheck/runValgrind.sh
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
  tags:
    - Linux
  artifacts:
    paths:
      - valgrind-report.xml
    expire_in: 1 week
  variables:
    DEVTOOLS: $DEVTOOLS_Linux_Stable

.copyTemplate:
  script:
    - .\tests\build\copyHeaders-deployment.bat
    - .\tests\build\copyBin.bat
  only:
    - tags
  tags:
    - Win10  
    
# copy files to servers
copyForDeploymentWin:
  stage: copy
  extends: .copyTemplate
  dependencies:
    - "windowsBuildDebug: [$DEVTOOLS_Win_Stable]"
    - "windowsBuildRelease: [$DEVTOOLS_Win_Stable]"
  variables:
    PLATFORMNAME:  windows
    RELEASESTATUS: stable

copyForDeploymentWinUnstable:
  stage: copy
  extends: .copyTemplate
  dependencies:
    - "windowsBuildDebug: [$DEVTOOLS_Win_Unstable]"
    - "windowsBuildRelease: [$DEVTOOLS_Win_Unstable]"
  variables:
    PLATFORMNAME:  windows
    RELEASESTATUS: unstable

copyForDeploymentLinux:
  stage: copy
  extends: .copyTemplate
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Stable]"
    - "linuxBuildRelease: [$DEVTOOLS_Linux_Stable]"
  variables:
    PLATFORMNAME:  linux
    RELEASESTATUS: stable

copyForDeploymentLinuxUnstable:
  stage: copy
  extends: .copyTemplate
  dependencies:
    - "linuxBuildDebug: [$DEVTOOLS_Linux_Unstable]"
    - "linuxBuildRelease: [$DEVTOOLS_Linux_Unstable]"
  variables:
    PLATFORMNAME:  linux
    RELEASESTATUS: unstable

# code quality
codingstyle:
  stage: codequality
  extends: .codingStyleTemplate 
  except:
    - tags
 
cppcheck:
  stage: codequality
  extends: .cppCheckTemplate 
   
pages:
  stage: badges
  extends: .pageTemplate 
  only:
    - master
    - tag

# badges
badges:
  stage: badges
  extends: .badgeTemplate 
  except:
    - tags
